plugins {
    id 'java' // Java 플러그인을 사용하여 Java 프로젝트를 빌드합니다.
}

sourceCompatibility = JavaVersion.VERSION_11 // 소스 코드의 Java 버전을 11로 설정합니다.
targetCompatibility = JavaVersion.VERSION_11 // 대상 코드의 Java 버전을 11로 설정합니다.

repositories {
    mavenCentral() // Maven 중앙 저장소에서 종속성을 가져올 수 있도록 설정합니다.
}

dependencies {
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0' // Jakarta Servlet API 종속성을 프로젝트에 추가합니다.
    implementation 'org.reflections:reflections:0.10.2' // Reflections 라이브러리 종속성을 프로젝트에 추가합니다.
    implementation 'ch.qos.logback:logback-classic:1.2.10' // Logback Classic 라이브러리 종속성을 프로젝트에 추가합니다.

    implementation 'org.projectlombok:lombok:1.18.22' // Lombok 라이브러리 종속성을 프로젝트에 추가합니다.
    implementation 'org.apache.commons:commons-lang3:3.12.0' // Apache Commons Lang 라이브러리 종속성을 프로젝트에 추가합니다.

    testImplementation 'org.assertj:assertj-core:3.22.0' // AssertJ Core 라이브러리 종속성을 테스트에 추가합니다.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // JUnit Jupiter API 종속성을 테스트에 추가합니다.
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.0.0-M4' // JUnit Jupiter Params 종속성을 테스트에 추가합니다.
    testImplementation "org.mockito:mockito-core:3.+" // Mockito Core 라이브러리 종속성을 테스트에 추가합니다.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // JUnit Jupiter Engine 종속성을 테스트 런타임에 추가합니다.
}

test {
    useJUnitPlatform() // JUnit 플랫폼을 사용하여 테스트를 실행합니다.
}
